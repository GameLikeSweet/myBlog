{
    "css": "./web103.css",
    "0": {
        "type": "section",
        "target": "main",
        "title": "web103Top",
        "0": {
            "type": "article",
            "title": "web103",
            "0": "<img src='./resource/web103/index.png'><p><h1>Web 103</h1></p>"
        },
        "1": {
            "type": "article",
            "title": "githubLink",
            "0": "<div class='web103Link'><a href='https://github.com/GameLikeSweet/web103' target=_blank> -> github 리포지토리 바로가기</a> </p></div>",
            "1": "<p>기존에 HTML 내부에서 css를 분리하여 css와 html의 가독성을 올리고 관리의 편의성을 증가시키는것을 목표로한다. ",
            "2": "단순하게 body 또는 하나의 div로 컨텐츠를 관리하는것이 아닌 Header, Section, acticle 등으로 엘리먼트를 나누어 각 엘리먼트들을 더 쉽게 관리할 수 있게 한다. ",
            "3": "position과 display 스타일을 이용하여 특정 엘리먼트를 원하는 위치에 배치 할 수 있게한다.</p>."
        },
        "2": {
            "type": "article",
            "title": "linkCss",
            "0": "<h2>Link</h2>",
            "1": "<p>Link 엘리먼트는 현재 문서와 외부 리소스의 관계를 명시한다. html 내부에 style을 구성하지 않고",
            "2" : "web103.css 라는 다른 파일로 css를 분리해서 관리 할 수 있게한다.</p>",
            "3" : "<p>예시) link rel='stylesheet' type='text/css' href='web103_index.css' </p>"
        },
        "3": {
            "type": "article",
            "title": "position",
            "0": "<h2>Position</h2>",
            "1": "<p>엘리먼트에 position을 적용하여 해당 엘리먼트의 위치를 조정한다.</p>",
            "2": "<ol><li> static : 기본값으로 일반적인 문서 배치 기준을 따른다.</li>",
            "3": "<li> relative : 일반적인 문서 배치 기준에 따라 배치하고 자기 자신을 기준으로 top, right, bottom, left 값에 따라 오프셋을 적용한다.</li>",
            "4": "<li> absolute : 일반적인 문서 배치가 아니라 가장 가까운 지정 조상 엘리먼트를 대상으로 배치한다.</li>",
            "5": "<li> fixed : 일반적인 문서 배치 기준이 아니라 뷰포트(전체 화면)을 기준으로 배치된다. 스크롤에 영향을 받지 않고 화면 특정 지점에 고정된다.</li>"
        },
        "4": {
            "type": "article",
            "title": "pseudoClass",
            "0": "<h2>Pseudo-Class 선택자</h2>",
            "1": "<p>Pseudo-Class 선택자는 선택자에 추가하는 키워드로, 선택한 요소가 특별한 상태여야 적용된다.",
            "2:": " : (콜론)을 통해서 표현하며 클래스 이름인 정해져 있다. </p>",
            "3": "<div class='hoverTest'>pseudoClass:hover<br>마우스를 올리면 적용</div>",
            "4" : "<div class='activeTest'>pseudoClass:active<br>마우스 클릭 중 적용</div>"
        }
    },
    "1": {
        "type": "section",
        "target": "main",
        "title": "web103Mid",
        "0": {
            "type": "article",
            "title": "web102Html",
            "0": "<img src='./resource/web102/html.png'>"
        },
        "1" : {
            "type":"article",
            "title" : "indexHtml",
            "0" : "<p>index.html 내부에 style을 추가하였으며 이렇게 만든 선택자들을 이용하여 같은 class를 가진 엘리먼트들을 한번에 관리하고 있다.",
            "1" : "style의 margin과 padding 등을 이용하여 각 엘리먼트들의 위치 동적으로 적용하고있다.",
            "2" : "index.html 내부에서는 상단의 메뉴바에 pseudo-class의 hover 기능을 이용하여 동적인 느낌을 추가 하였다.</p>"

        },
        "2" : {
            "type"  : "article",
            "title" : "aboutHtml",
            "0" : "<p> about.html은 여러개의 box들의 공통적인 부분은 box라는 class로 하나로 처리하였으며 상단 사진 위의 box는 combinator을 이용하여",
            "1" : "하단의 7개의 box는 pseudo-class의 nth-child을 이용하여 각자 다른 스타일을 적용시켰다. <br>각 box의 사이즈는 160 X 160 이지만 padding을 이용하여 250 X 250 으로 구현하였다.</p>"
        }
    }
}